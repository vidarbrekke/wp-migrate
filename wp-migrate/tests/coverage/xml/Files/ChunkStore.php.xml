<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ChunkStore.php" path="/Files">
    <totals>
      <lines total="102" comments="9" code="93" executable="47" executed="43" percent="91.49"/>
      <methods count="6" tested="2" percent="33.33"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="WpMigrate\Files\ChunkStore" start="6" executable="46" executed="42" crap="19.24">
      <namespace name="WpMigrate\Files"/>
      <method name="__construct" signature="__construct()" start="10" end="16" crap="2.06" executable="4" executed="3" coverage="75"/>
      <method name="get_job_dir" signature="get_job_dir(string $jobId): string" start="18" end="24" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="get_chunk_dir" signature="get_chunk_dir(string $jobId): string" start="26" end="32" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="chunk_path" signature="chunk_path(string $jobId, string $artifact, int $index): string" start="34" end="42" crap="2.03" executable="5" executed="4" coverage="80"/>
      <method name="list_present" signature="list_present(string $jobId, string $artifact): array" start="45" end="66" crap="5.01" executable="15" executed="14" coverage="93.333333333333"/>
      <method name="save_chunk" signature="save_chunk(string $jobId, string $artifact, int $index, string $rawBytes, string $sha256B64): void" start="68" end="98" crap="6.01" executable="14" executed="13" coverage="92.857142857143"/>
    </class>
    <coverage>
      <line nr="4">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
      </line>
      <line nr="11">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="12">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="13">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="19">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="20">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="21">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="23">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_job_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="27">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="28">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="29">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="31">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_get_chunk_dir_creates_directory"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_directory_permission_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="35">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="37">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="40">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="41">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_generation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_path_uniqueness"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="46">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="47">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="49">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="52">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="53">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="54">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="55">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="56">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="57">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="58">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="59">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="62">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="64">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="65">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_empty"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="70">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="71">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_size_limit"/>
      </line>
      <line nr="75">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="76">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_job_id_path_traversal"/>
      </line>
      <line nr="80">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="81">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="86">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="87">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_path_traversal_protection"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_filename_sanitization"/>
      </line>
      <line nr="91">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="92">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="93">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_invalid_hash"/>
      </line>
      <line nr="96">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
      <line nr="97">
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_save_chunk_success"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_with_chunks"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_different_artifacts"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_list_present_chunk_ordering"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_safe_filename_sanitization"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_concurrent_chunk_operations"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_integrity"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_large_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_binary_content_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_empty_chunk_handling"/>
        <covered by="WpMigrate\Tests\Files\ChunkStoreTest::test_chunk_cleanup_simulation"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Files</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABSPATH'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXIT">exit</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ChunkStore</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="7">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MAX_CHUNK_SIZE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">64</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1024</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1024</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 64MB</token>
      </line>
      <line no="8">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$baseDir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$upload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\wp_upload_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">baseDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$upload</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'basedir'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/mk-migrate-jobs'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">baseDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">			</token>
        <token name="T_NAME_FULLY_QUALIFIED">\wp_mkdir_p</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">baseDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_job_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">baseDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\sanitize_file_name</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">			</token>
        <token name="T_NAME_FULLY_QUALIFIED">\wp_mkdir_p</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_chunk_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_job_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/chunks'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">			</token>
        <token name="T_NAME_FULLY_QUALIFIED">\wp_mkdir_p</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">chunk_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\sanitize_file_name</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Ensure we have a valid filename after sanitization</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact_'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">md5</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$fname</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_chunk_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fname</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/** @return array&lt;int,int&gt; */</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">list_present</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_chunk_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\sanitize_file_name</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Ensure we have a valid filename after sanitization</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact_'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">md5</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$prefix</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$present</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$dh</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AT">@</token>
        <token name="T_NAME_FULLY_QUALIFIED">\opendir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dh</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">			</token>
        <token name="T_WHILE">while</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$f</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">readdir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dh</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">				</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$f</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$prefix</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">					</token>
        <token name="T_VARIABLE">$idx</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$f</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$prefix</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">					</token>
        <token name="T_VARIABLE">$present</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$idx</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">			</token>
        <token name="T_NAME_FULLY_QUALIFIED">\closedir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dh</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">		</token>
        <token name="T_STRING">sort</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$present</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$present</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="67"/>
      <line no="68">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">save_chunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawBytes</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sha256B64</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Validate chunk size</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawBytes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MAX_CHUNK_SIZE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Chunk exceeds maximum size limit'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="73"/>
      <line no="74">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Validate path components to prevent directory traversal</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'..'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid path component detected'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78"/>
      <line no="79">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Sanitize artifact name and validate</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\sanitize_file_name</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact_'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">md5</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="84"/>
      <line no="85">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Additional validation on sanitized artifact</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'..'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid path component detected after sanitization'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Validate hash</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$calc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">base64_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\hash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sha256'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawBytes</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\hash_equals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$calc</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sha256B64</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\RuntimeException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Chunk hash mismatch'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="95"/>
      <line no="96">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunk_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sanitizedArtifact</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">		</token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_put_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawBytes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="99">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="100"/>
      <line no="101"/>
      <line no="102"/>
    </source>
  </file>
</phpunit>
