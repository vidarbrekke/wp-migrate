<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Api.php" path="/Rest">
    <totals>
      <lines total="561" comments="29" code="532" executable="351" executed="160" percent="45.58"/>
      <methods count="27" tested="11" percent="40.74"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="WpMigrate\Rest\Api" start="18" executable="350" executed="159" crap="819.47">
      <namespace name="WpMigrate\Rest"/>
      <method name="__construct" signature="__construct(WpMigrate\Security\HmacAuth $auth, ?WpMigrate\Files\ChunkStore $chunks, ?WpMigrate\Migration\DatabaseEngine $dbEngine)" start="24" end="29" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="get_job_manager" signature="get_job_manager(): WpMigrate\Migration\JobManager" start="34" end="36" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="register" signature="register(): void" start="38" end="40" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="register_routes" signature="register_routes(): void" start="42" end="111" crap="2" executable="61" executed="0" coverage="0"/>
      <method name="handshake" signature="handshake(WP_REST_Request $request)" start="113" end="140" crap="3.09" executable="23" executed="18" coverage="78.260869565217"/>
      <method name="command" signature="command(WP_REST_Request $request)" start="142" end="165" crap="6.35" executable="14" executed="11" coverage="78.571428571429"/>
      <method name="chunk" signature="chunk(WP_REST_Request $request)" start="167" end="192" crap="6.14" executable="19" executed="16" coverage="84.210526315789"/>
      <method name="progress" signature="progress(WP_REST_Request $request)" start="194" end="200" crap="1" executable="5" executed="5" coverage="100"/>
      <method name="logs_tail" signature="logs_tail(WP_REST_Request $request)" start="202" end="209" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="db_export" signature="db_export(WP_REST_Request $request)" start="211" end="247" crap="3" executable="27" executed="27" coverage="100"/>
      <method name="monitor" signature="monitor(WP_REST_Request $request)" start="249" end="282" crap="20" executable="22" executed="0" coverage="0"/>
      <method name="active_jobs" signature="active_jobs(WP_REST_Request $request)" start="284" end="318" crap="12" executable="24" executed="0" coverage="0"/>
      <method name="execute_with_retry" signature="execute_with_retry(string $action, string $jobId, WP_REST_Request $request): WP_REST_Response" start="323" end="356" crap="11.06" executable="25" executed="12" coverage="48"/>
      <method name="error_to_response" signature="error_to_response(WP_Error $err, string $fallbackCode)" start="358" end="364" crap="3" executable="5" executed="5" coverage="100"/>
      <method name="with_auth" signature="with_auth(WP_REST_Request $request, callable $callback)" start="370" end="376" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="handle_health" signature="handle_health(string $jobId): WP_REST_Response" start="378" end="385" crap="2" executable="6" executed="0" coverage="0"/>
      <method name="handle_prepare" signature="handle_prepare(string $jobId, WP_REST_Request $request): WP_REST_Response" start="387" end="404" crap="2" executable="13" executed="0" coverage="0"/>
      <method name="handle_db_import" signature="handle_db_import(string $jobId, WP_REST_Request $request): WP_REST_Response" start="406" end="435" crap="3.21" executable="21" executed="15" coverage="71.428571428571"/>
      <method name="handle_search_replace" signature="handle_search_replace(string $jobId, WP_REST_Request $request): WP_REST_Response" start="437" end="465" crap="3.24" executable="20" executed="14" coverage="70"/>
      <method name="handle_finalize" signature="handle_finalize(string $jobId, WP_REST_Request $request): WP_REST_Response" start="467" end="494" crap="2.18" executable="17" executed="11" coverage="64.705882352941"/>
      <method name="handle_rollback" signature="handle_rollback(string $jobId, WP_REST_Request $request): WP_REST_Response" start="496" end="520" crap="6" executable="16" executed="0" coverage="0"/>
      <method name="remove_maintenance_mode" signature="remove_maintenance_mode(): void" start="522" end="527" crap="2.15" executable="3" executed="2" coverage="66.666666666667"/>
      <method name="cleanup_temp_files" signature="cleanup_temp_files(string $jobId): void" start="529" end="542" crap="14.11" executable="7" executed="2" coverage="28.571428571429"/>
      <method name="has_rsync" signature="has_rsync(): bool" start="544" end="546" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="has_zstd" signature="has_zstd(): bool" start="547" end="549" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="has_wp_cli" signature="has_wp_cli(): bool" start="550" end="552" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="binary_exists" signature="binary_exists(string $bin): bool" start="553" end="557" crap="2" executable="3" executed="3" coverage="100"/>
    </class>
    <coverage>
      <line nr="4">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
      </line>
      <line nr="25">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="26">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="27">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="28">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="35">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="114">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="115">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="116">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="118">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="126">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="127">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="128">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="129">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="131">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="132">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="133">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="134">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="135">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="136">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="138">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="139">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="143">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="144">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="145">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="148">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="150">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="151">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="155">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="157">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="159">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="162">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="164">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
      </line>
      <line nr="168">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="169">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="170">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="171">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="174">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="175">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="176">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="177">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="178">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="180">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="182">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
      </line>
      <line nr="183">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
      </line>
      <line nr="184">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
      </line>
      <line nr="186">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
      </line>
      <line nr="190">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
      </line>
      <line nr="191">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
      </line>
      <line nr="195">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="196">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="197">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="198">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="199">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="203">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="204">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="205">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="206">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="207">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="208">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="212">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="213">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="214">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="216">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="217">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="218">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="221">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="224">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
      </line>
      <line nr="226">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
      </line>
      <line nr="227">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
      </line>
      <line nr="228">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
      </line>
      <line nr="229">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
      </line>
      <line nr="230">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
      </line>
      <line nr="231">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
      </line>
      <line nr="235">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="236">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="237">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="240">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="241">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="242">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="243">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="246">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="325">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="326">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="328">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="329">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="330">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="331">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="332">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="333">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="337">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="359">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="360">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="361">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="362">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="363">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="371">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="372">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="373">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="375">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="407">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="408">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="411">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="413">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="415">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="424">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="425">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="426">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="429">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="430">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="431">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="432">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="438">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="439">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="443">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="445">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="454">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="455">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="456">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="459">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="460">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="461">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="462">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="470">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="473">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="476">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="477">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="481">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="482">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="523">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="524">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="530">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="531">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="545">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="548">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="551">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="554">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="555">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="556">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="130">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="137">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="219">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="220">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
      </line>
      <line nr="238">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="244">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="245">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
      </line>
      <line nr="338">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="339">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="340">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="427">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="433">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="434">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
      </line>
      <line nr="457">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="463">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="464">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
      </line>
      <line nr="478">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="479">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="483">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="484">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="485">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Rest</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABSPATH'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXIT">exit</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Contracts\Registrable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Security\HmacAuth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Files\ChunkStore</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\State\StateStore</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Migration\JobManager</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Migration\DatabaseEngine</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Logging\JsonLogger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Preflight\Checker</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\WP_Error</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\WP_REST_Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\WP_REST_Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Api</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Registrable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HmacAuth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$auth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ChunkStore</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JobManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobs</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DatabaseEngine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dbEngine</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23"/>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HmacAuth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$auth</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">ChunkStore</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">DatabaseEngine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dbEngine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">auth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$auth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ChunkStore</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JobManager</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">StateStore</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dbEngine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dbEngine</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DatabaseEngine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     * Get JobManager instance for testing</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_job_manager</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JobManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\add_action</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rest_api_init'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'register_routes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41"/>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">register_routes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\register_rest_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'migrate/v1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/handshake'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'methods'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'POST'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'handshake'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'permission_callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__return_true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\register_rest_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'migrate/v1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/command'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'methods'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'POST'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'command'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'permission_callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__return_true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\register_rest_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'migrate/v1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/chunk'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'methods'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'POST'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'chunk'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'permission_callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__return_true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'args'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'index'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'minimum'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sha256'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\register_rest_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'migrate/v1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/progress'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'methods'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'progress'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'permission_callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__return_true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'args'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\register_rest_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'migrate/v1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/logs/tail'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'methods'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'logs_tail'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'permission_callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__return_true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'args'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'n'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'minimum'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'maximum'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1000</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\register_rest_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'migrate/v1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/db/export'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'methods'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'POST'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_export'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'permission_callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__return_true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'args'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_dump.sql.zst'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95"/>
      <line no="96">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\register_rest_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'migrate/v1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/monitor'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'methods'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'monitor'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'permission_callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__return_true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'args'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'string'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'since'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'integer'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_NAME_FULLY_QUALIFIED">\register_rest_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'migrate/v1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/jobs/active'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'methods'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'active_jobs'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'permission_callback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__return_true'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="112"/>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handshake</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$checker</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Checker</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$preflight</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$checker</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">run</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$preflight</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EPREFLIGHT_FAILED'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$preflight</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">400</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">            </token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$cap</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rsync'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">has_rsync</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'zstd'</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">has_zstd</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wp_cli'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">has_wp_cli</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$site</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'url'</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\get_site_url</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wp'</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\get_bloginfo</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'version'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db'</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mysql'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'prefix'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\is_multisite</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\get_site_option</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'base_prefix'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$GLOBALS</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wpdb'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">prefix</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'charset'</token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$GLOBALS</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wpdb'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">charset</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'site'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$site</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'capabilities'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cap</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="141"/>
      <line no="142">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">command</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'action'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146"/>
      <line no="147">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Wrap critical operations with retry logic</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$retryableActions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_import'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'search_replace'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'finalize'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149"/>
      <line no="150">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$retryableActions</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute_with_retry</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="153"/>
      <line no="154">
        <token name="T_WHITESPACE">            </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'health'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle_health</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'prepare'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle_prepare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rollback'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle_rollback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DEFAULT">default</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EUNKNOWN_ACTION'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Unknown action: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">400</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="166"/>
      <line no="167">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">chunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EBAD_REQUEST'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id and artifact required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">400</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_method</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$present</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list_present</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$next</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$present</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$next</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">max</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$present</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'present'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$present</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'next'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$next</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'index'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$sha</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sha256'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$raw</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_body</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">            </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save_chunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$raw</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sha</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EBAD_CHUNK'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Chunk validation failed'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">400</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'received'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'index'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="193"/>
      <line no="194">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">progress</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_progress</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'steps'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY_CAST">(array)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'steps'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="201"/>
      <line no="202">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">logs_tail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'n'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$log</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonLogger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'lines'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$log</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="210"/>
      <line no="211">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">db_export</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_dump.sql.zst'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="215"/>
      <line no="216">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EBAD_REQUEST'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id is required'</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">400</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="223"/>
      <line no="224">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dbEngine</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">export_database</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="225"/>
      <line no="226">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EDB_EXPORT_FAILED'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database export failed'</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">500</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="233"/>
      <line no="234">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Update job state</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_exported'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'export_method'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'method'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'unknown'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exported_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="239"/>
      <line no="240">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'method'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'method'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'unknown'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'notes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database export completed successfully'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="248"/>
      <line no="249">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">monitor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$since</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'since'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="253"/>
      <line no="254">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EBAD_REQUEST'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id is required'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">400</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="257"/>
      <line no="258">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_progress</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="259"/>
      <line no="260">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Get recent logs since timestamp</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonLogger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$recentLogs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">50</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Get last 50 log entries - TODO: Use config-driven value</token>
      </line>
      <line no="263"/>
      <line no="264">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Filter logs by timestamp if since is provided</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$since</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$recentLogs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$recentLogs</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$log</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$since</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$log</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ts'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtotime</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$log</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ts'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$since</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="270"/>
      <line no="271">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$retryStats</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_retry_stats</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="272"/>
      <line no="273">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="274">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'logs'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$recentLogs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Re-index array</token>
      </line>
      <line no="277">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'retry_stats'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$retryStats</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="278">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'timestamp'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">time</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="279">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'server_time'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="280">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="282">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="283"/>
      <line no="284">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">active_jobs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="285">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">            </token>
        <token name="T_GLOBAL">global</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="287"/>
      <line no="288">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Get all active job IDs from database</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$jobOptions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_results</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="290">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">prepare</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">SELECT option_name FROM </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="292">
        <token name="T_ENCAPSED_AND_WHITESPACE">                     WHERE option_name LIKE %s</token>
      </line>
      <line no="293">
        <token name="T_ENCAPSED_AND_WHITESPACE">                     AND option_value NOT LIKE %s</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="294">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wp_migrate_job_%'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="295">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'%"state":"done"%'</token>
      </line>
      <line no="296">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="297">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">ARRAY_A</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="299"/>
      <line no="300">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$activeJobs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobOptions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wp_migrate_job_'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'option_name'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="303">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$progress</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_progress</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="304"/>
      <line no="305">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Only include jobs that are not in terminal states</token>
      </line>
      <line no="306">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$progress</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'done'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rolled_back'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="307">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$activeJobs</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$progress</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="310"/>
      <line no="311">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'active_jobs'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$activeJobs</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'count'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$activeJobs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'timestamp'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">time</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="319"/>
      <line no="320">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="321">
        <token name="T_DOC_COMMENT">     * Execute action with automatic retry logic</token>
      </line>
      <line no="322">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="323">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">execute_with_retry</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="324">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute_with_retry</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="327">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_import'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="329">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle_db_import</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'search_replace'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="331">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle_search_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="332">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'finalize'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="333">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle_finalize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="334">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_DEFAULT">default</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="335">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Unsupported retryable action: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="336">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="337">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="338">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="339">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$action</token>
      </line>
      <line no="340">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="341">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="342">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Record the error for potential future retry</token>
      </line>
      <line no="343">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">record_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="344">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'action'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="345">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exception_type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="346">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'http_code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="347">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="348"/>
      <line no="349">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="350">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="351">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ERETRY_FAILED'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="352">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Operation failed after retries: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="353">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'retry_stats'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_retry_stats</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="354">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">500</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="355">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="356">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="357"/>
      <line no="358">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">error_to_response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fallbackCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="359">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$code</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_error_code</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fallbackCode</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="360">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_error_message</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="361">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY_CAST">(array)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$err</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_error_data</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="362">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="363">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$code</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$msg</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="364">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="365"/>
      <line no="366">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="367">
        <token name="T_DOC_COMMENT">     * Auth wrapper to enforce HMAC verification and return uniform error responses.</token>
      </line>
      <line no="368">
        <token name="T_DOC_COMMENT">     * @param callable $callback function(): WP_REST_Response</token>
      </line>
      <line no="369">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="370">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">with_auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="371">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$auth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">auth</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verify_request</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="372">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$auth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="373">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">error_to_response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$auth</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EAUTH'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="374">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="375">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="376">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="377"/>
      <line no="378">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle_health</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="379">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_progress</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="380">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="381">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="382">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="383">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="384">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="385">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="386"/>
      <line no="387">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle_prepare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="388">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_json_params</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="389">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$mode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mode'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'reset'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="390">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$emailBlackhole</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOL_CAST">(bool)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email_blackhole'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="391">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="392">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Create or update job state</token>
      </line>
      <line no="393">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'preflight_ok'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="394">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mode'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mode</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="395">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email_blackhole'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$emailBlackhole</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="396">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'prepared_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="397">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="398">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="399">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="400">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="401">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'preflight_ok'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="402">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'notes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Job prepared successfully'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="403">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="405"/>
      <line no="406">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle_db_import</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="407">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'params'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="408">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="409">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="410">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="411">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'artifact'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_dump.sql.zst'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="412"/>
      <line no="413">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dbEngine</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">import_database</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="414"/>
      <line no="415">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="416">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="417">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="418">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EDB_IMPORT_FAILED'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="419">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database import failed'</token>
      </line>
      <line no="420">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">500</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="421">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="422"/>
      <line no="423">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Update job state</token>
      </line>
      <line no="424">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_imported'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="425">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'import_stats'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'stats'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="426">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'imported_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="427">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="428"/>
      <line no="429">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="430">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="431">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_imported'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="432">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'stats'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'stats'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="433">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'notes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database import completed successfully'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="434">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="435">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="436"/>
      <line no="437">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle_search_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="438">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_param</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'params'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="439">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="440">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="441">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="442"/>
      <line no="443">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dbEngine</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">search_replace_urls</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="444"/>
      <line no="445">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="446">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="447">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="448">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ESEARCH_REPLACE_FAILED'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="449">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'URL replacement failed'</token>
      </line>
      <line no="450">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">500</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="451">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="452"/>
      <line no="453">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Update job state</token>
      </line>
      <line no="454">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'url_replaced'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="455">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'replacements'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'replacements'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="456">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'replaced_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="457">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="458"/>
      <line no="459">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="460">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="461">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'url_replaced'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="462">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'replacements'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'replacements'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="463">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'notes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'URL replacement completed successfully'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="464">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="465">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="466"/>
      <line no="467">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle_finalize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="468">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="469">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Remove maintenance mode if it was set</token>
      </line>
      <line no="470">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">remove_maintenance_mode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="471"/>
      <line no="472">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Clear any remaining temporary files</token>
      </line>
      <line no="473">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cleanup_temp_files</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="474"/>
      <line no="475">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Update job state to completed</token>
      </line>
      <line no="476">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'done'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="477">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'finalized_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="478">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'cleanup_completed'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
      </line>
      <line no="479">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="480"/>
      <line no="481">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="482">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="483">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'done'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="484">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'notes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Migration completed successfully'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="485">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="486"/>
      <line no="487">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="488">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="489">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="490">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EFINALIZE_FAILED'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="491">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Finalization failed: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="492">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">500</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="493">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="494">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="495"/>
      <line no="496">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle_rollback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="497">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="498">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Basic rollback implementation - can be enhanced with snapshots</token>
      </line>
      <line no="499">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">remove_maintenance_mode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="500"/>
      <line no="501">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Update job state to indicate rollback</token>
      </line>
      <line no="502">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobs</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rolled_back'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="503">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rolled_back_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="504">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rollback_reason'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'User initiated'</token>
      </line>
      <line no="505">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="506"/>
      <line no="507">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="508">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="509">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rolled_back'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="510">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'notes'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Rollback completed successfully'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="511">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="512"/>
      <line no="513">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="514">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="515">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="516">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EROLLBACK_FAILED'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="517">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Rollback failed: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="518">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">500</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="519">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="520">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="521"/>
      <line no="522">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">remove_maintenance_mode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="523">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$maintenanceFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\ABSPATH</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.maintenance'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="524">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$maintenanceFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="525">
        <token name="T_WHITESPACE">            </token>
        <token name="T_AT">@</token>
        <token name="T_STRING">unlink</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$maintenanceFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="526">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="527">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="528"/>
      <line no="529">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">cleanup_temp_files</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="530">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$jobDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_job_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="531">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="532">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Remove old chunk files (keep for 24 hours as backup)</token>
      </line>
      <line no="533">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">glob</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/chunks/*'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="534">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="535">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="536">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">filemtime</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">time</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">86400</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 24 hours ago</token>
      </line>
      <line no="537">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_AT">@</token>
        <token name="T_STRING">unlink</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$file</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="538">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="539">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="540">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="541">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="542">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="543"/>
      <line no="544">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">has_rsync</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="545">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">binary_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rsync'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="546">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="547">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">has_zstd</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="548">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">binary_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'zstd'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">binary_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'pzstd'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="549">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="550">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">has_wp_cli</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="551">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'WP_CLI'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\WP_CLI</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="552">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="553">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">binary_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$bin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="554">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$which</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\escapeshellcmd</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'command -v '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$bin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' 2&gt;/dev/null'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="555">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\shell_exec</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$which</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="556">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="557">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="558">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="559"/>
      <line no="560"/>
      <line no="561"/>
    </source>
  </file>
</phpunit>
