<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Checker.php" path="/Preflight">
    <totals>
      <lines total="37" comments="3" code="34" executable="17" executed="15" percent="88.24"/>
      <methods count="2" tested="1" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="WpMigrate\Preflight\Checker" start="6" executable="16" executed="14" crap="8.12">
      <namespace name="WpMigrate\Preflight"/>
      <method name="run" signature="run(): array" start="8" end="27" crap="6.13" executable="13" executed="11" coverage="84.615384615385"/>
      <method name="binary_exists" signature="binary_exists(string $bin): bool" start="29" end="33" crap="2" executable="3" executed="3" coverage="100"/>
    </class>
    <coverage>
      <line nr="4">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
      </line>
      <line nr="9">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="10">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="11">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="12">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="17">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="20">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="21">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="25">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="26">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="30">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="31">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="32">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="13">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
      <line nr="14">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Preflight</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABSPATH'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXIT">exit</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Checker</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="7">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/** @return array{ok:bool,errors:array&lt;int,array{code:string,message:string}&gt;,capabilities:array&lt;string,bool&gt;} */</token>
      </line>
      <line no="8">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">run</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$errors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$cap</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rsync'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">binary_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rsync'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'zstd'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">binary_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'zstd'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">binary_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'pzstd'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wp_cli'</token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'WP_CLI'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\WP_CLI</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// TLS recommended, but server endpoints are under HTTPS assumption</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\function_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mysqli_connect'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EDB_PRIVS'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'MySQLi not available'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">		</token>
        <token name="T_GLOBAL">global</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">use_mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">use_mysqli</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EDB_PRIVS'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wpdb is not using MySQLi'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Only MySQL supported</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$errors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errors</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errors</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'capabilities'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cap</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">binary_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$bin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$which</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\escapeshellcmd</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'command -v '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$bin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' 2&gt;/dev/null'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\shell_exec</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$which</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="35"/>
      <line no="36"/>
      <line no="37"/>
    </source>
  </file>
</phpunit>
