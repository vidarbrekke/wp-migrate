<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="JsonLogger.php" path="/Logging">
    <totals>
      <lines total="56" comments="3" code="53" executable="24" executed="21" percent="87.50"/>
      <methods count="5" tested="3" percent="60.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="WpMigrate\Logging\JsonLogger" start="6" executable="23" executed="20" crap="10.22">
      <namespace name="WpMigrate\Logging"/>
      <method name="__construct" signature="__construct(string $jobId)" start="10" end="18" crap="2.02" executable="6" executed="5" coverage="83.333333333333"/>
      <method name="log" signature="log(string $step, string $level, string $message, array $fields): void" start="21" end="30" crap="1" executable="8" executed="8" coverage="100"/>
      <method name="tail" signature="tail(int $n): array" start="32" end="36" crap="5.67" executable="3" executed="1" coverage="33.333333333333"/>
      <method name="redact" signature="redact(string $s): string" start="38" end="42" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="redact_array" signature="redact_array(array $a): array" start="45" end="52" crap="3" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="4">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
      </line>
      <line nr="11">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="12">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="13">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="14">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="17">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="22">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="23">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="24">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="25">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="26">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="27">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="28">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="29">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="33">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
      </line>
      <line nr="40">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="41">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="46">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="47">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="48">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="51">
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetrySucceedsOnFirstAttempt"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryRetriesRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryFailsAfterMaxRetries"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testExecuteWithRetryDoesNotRetryNonRecoverableErrors"/>
        <covered by="WpMigrate\Tests\Migration\ErrorRecoveryTest::testScheduleRetryReturnsPositiveDelay"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Logging</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABSPATH'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXIT">exit</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonLogger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="7">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$filePath</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$upload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\wp_upload_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$upload</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'basedir'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/mk-migrate-logs'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">			</token>
        <token name="T_NAME_FULLY_QUALIFIED">\wp_mkdir_p</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">filePath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\sanitize_file_name</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.jsonl'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/** @param array&lt;string,mixed&gt; $fields */</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$step</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$level</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fields</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$entry</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ts'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">jobId</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'step'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$step</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'level'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$level</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'msg'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">redact</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">redact_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fields</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">		</token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_put_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">filePath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entry</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FILE_APPEND</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">tail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">filePath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$lines</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AT">@</token>
        <token name="T_NAME_FULLY_QUALIFIED">\file</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">filePath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FILE_IGNORE_NEW_LINES</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PIPE">|</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FILE_SKIP_EMPTY_LINES</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_slice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lines</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">redact</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Remove obvious secrets</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preg_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/[A-Za-z0-9]{24,}/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'***'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/** @param array&lt;string,mixed&gt; $a */</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">redact_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">		</token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">			</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">				</token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">redact</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="53">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54"/>
      <line no="55"/>
      <line no="56"/>
    </source>
  </file>
</phpunit>
