<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="DatabaseImporter.php" path="/Migration">
    <totals>
      <lines total="149" comments="10" code="139" executable="71" executed="2" percent="2.82"/>
      <methods count="4" tested="1" percent="25.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="WpMigrate\Migration\DatabaseImporter" start="9" executable="70" executed="1" crap="364.75">
      <namespace name="WpMigrate\Migration"/>
      <method name="__construct" signature="__construct(WpMigrate\Files\ChunkStore $chunks)" start="12" end="14" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="import" signature="import(string $jobId, string $artifact): array" start="16" end="50" crap="12" executable="20" executed="0" coverage="0"/>
      <method name="assemble_dump_file" signature="assemble_dump_file(string $jobId, string $artifact): string" start="52" end="82" crap="30" executable="15" executed="0" coverage="0"/>
      <method name="perform_import" signature="perform_import(string $dumpPath): array" start="84" end="147" crap="110" executable="34" executed="0" coverage="0"/>
    </class>
    <coverage>
      <line nr="4">
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_export_database_success"/>
      </line>
      <line nr="13">
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_export_database_success"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_export_database_failure"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_import_database_success"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_import_database_failure"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_search_replace_urls_success"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_search_replace_urls_failure"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_default_artifact_names"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_method_delegation"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_constructor_dependency_injection"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_error_propagation"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_job_id_consistency"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_mixed_operation_scenarios"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_operation_isolation"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_export_database_success"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_export_database_failure"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_import_database_success"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_import_database_failure"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_search_replace_urls_success"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_search_replace_urls_failure"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_default_artifact_names"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_method_delegation"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_constructor_dependency_injection"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_error_propagation"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_job_id_consistency"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_mixed_operation_scenarios"/>
        <covered by="WpMigrate\Tests\Migration\DatabaseEngineTest::test_operation_isolation"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Migration</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABSPATH'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXIT">exit</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Files\ChunkStore</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Logging\JsonLogger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DatabaseImporter</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ChunkStore</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ChunkStore</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">import</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_dump.sql.zst'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonLogger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Assemble chunks into complete dump file</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$dumpPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assemble_dump_file</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dumpPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database dump file not found after chunk assembly'</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Import the database</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">perform_import</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dumpPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Clean up temporary file</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
        <token name="T_AT">@</token>
        <token name="T_STRING">unlink</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dumpPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database import failed'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database import failed: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51"/>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">assemble_dump_file</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">list_present</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\RuntimeException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'No chunks found for artifact: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="58"/>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tempFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">tempnam</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sys_get_temp_dir</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_import_'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$handle</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fopen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tempFile</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wb'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handle</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\RuntimeException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Failed to create temporary file for import'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunks</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$chunkPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunks</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">chunk_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$artifact</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$chunkData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file_get_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunkPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70"/>
      <line no="71">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunkData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\RuntimeException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Failed to read chunk: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunkPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">fwrite</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handle</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chunkData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FINALLY">finally</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">fclose</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handle</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tempFile</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">perform_import</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dumpPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_GLOBAL">global</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86"/>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$stats</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tables_created'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tables_dropped'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88"/>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Start transaction</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">query</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'START TRANSACTION'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Read and execute SQL file</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$sql</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file_get_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$dumpPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sql</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\RuntimeException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Failed to read dump file'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="98"/>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Split into individual statements (basic approach)</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$statements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'trim'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">';'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sql</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101"/>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106"/>
      <line no="107">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Skip comments and empty lines</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'--'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'#'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">query</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\RuntimeException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'SQL execution failed: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">last_error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="117"/>
      <line no="118">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Track basic stats</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">stripos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'CREATE TABLE'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$stats</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tables_created'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_INC">++</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">stripos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statement</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'DROP TABLE'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$stats</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'tables_dropped'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_INC">++</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">query</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'COMMIT'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127"/>
      <line no="128">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonLogger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'import_job'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Need to get jobId from context</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'info'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database import completed'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stats</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="130"/>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'stats'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stats</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="135"/>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">query</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLLBACK'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138"/>
      <line no="139">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonLogger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'import_job'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Need to get jobId from context</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database import failed'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'stats'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$stats</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="144"/>
      <line no="145">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$e</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="148">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="149"/>
    </source>
  </file>
</phpunit>
