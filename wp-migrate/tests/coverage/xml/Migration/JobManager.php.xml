<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="JobManager.php" path="/Migration">
    <totals>
      <lines total="258" comments="51" code="207" executable="113" executed="93" percent="82.30"/>
      <methods count="14" tested="10" percent="71.43"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="WpMigrate\Migration\JobManager" start="10" executable="112" executed="92" crap="21.06">
      <namespace name="WpMigrate\Migration"/>
      <method name="__construct" signature="__construct(WpMigrate\State\StateStore $store, ?WpMigrate\Migration\ErrorRecovery $errorRecovery)" start="33" end="36" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="get_or_create" signature="get_or_create(string $jobId): array" start="39" end="55" crap="2" executable="14" executed="14" coverage="100"/>
      <method name="set_state" signature="set_state(string $jobId, string $state, array $metadata): array" start="62" end="104" crap="3" executable="25" executed="25" coverage="100"/>
      <method name="record_error" signature="record_error(string $jobId, string $error, array $context): void" start="109" end="131" crap="2" executable="16" executed="16" coverage="100"/>
      <method name="execute_with_retry" signature="execute_with_retry(callable $operation, string $jobId, string $operationName)" start="136" end="138" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="should_retry_job" signature="should_retry_job(string $jobId): bool" start="143" end="146" crap="2" executable="2" executed="0" coverage="0"/>
      <method name="schedule_automatic_retry" signature="schedule_automatic_retry(string $jobId): int" start="151" end="154" crap="2" executable="2" executed="0" coverage="0"/>
      <method name="get_retry_stats" signature="get_retry_stats(string $jobId): array" start="159" end="161" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="get_progress" signature="get_progress(string $jobId): array" start="166" end="181" crap="1" executable="13" executed="13" coverage="100"/>
      <method name="can_rollback_from_state" signature="can_rollback_from_state(string $state): bool" start="186" end="189" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="is_valid_transition" signature="is_valid_transition(string $from, string $to): bool" start="194" end="197" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="is_valid_state" signature="is_valid_state(string $state): bool" start="202" end="204" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="calculate_progress" signature="calculate_progress(string $state): int" start="209" end="227" crap="1" executable="16" executed="16" coverage="100"/>
      <method name="cleanup_old_jobs" signature="cleanup_old_jobs(int $daysOld): int" start="232" end="254" crap="6" executable="15" executed="0" coverage="0"/>
    </class>
    <coverage>
      <line nr="4">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
      </line>
      <line nr="34">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_rollback_validation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="35">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_rollback_validation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_handshake_authentication_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_failure"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_missing_job_id"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_unknown_action"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_upload_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_chunk_listing"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_logs_tail_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_authentication_wrapper_error_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_different_http_methods"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_concurrent_requests"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_malformed_json_handling"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_large_request_body"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_rate_limiting_simulation"/>
      </line>
      <line nr="40">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="41">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="42">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="43">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="44">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="46">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="47">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="48">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="52">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="54">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="63">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="64">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="67">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="68">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
      </line>
      <line nr="69">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
      </line>
      <line nr="74">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="75">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="78">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="79">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="80">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="81">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="82">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="86">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="89">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="90">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="93">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="96">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="97">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="98">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="99">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="100">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="103">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="110">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="112">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="113">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="114">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="115">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="116">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="117">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="120">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="122">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="125">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="126">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="127">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="128">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="129">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="137">
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="167">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="170">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="171">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="172">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="173">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="174">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="175">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="176">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="177">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="178">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="179">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="187">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_rollback_validation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="188">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_rollback_validation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="195">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="196">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="203">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="210">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="226">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="45">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="49">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="50">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="51">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="70">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
      </line>
      <line nr="83">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="101">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="118">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="130">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
      </line>
      <line nr="169">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="180">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_progress_endpoint"/>
      </line>
      <line nr="211">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="212">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="213">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="214">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="215">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="216">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="217">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="218">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="219">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="220">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="221">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="222">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="223">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
      <line nr="224">
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_complete_migration_workflow"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_workflow_with_error_recovery"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_invalid_state_transitions_rejected"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_progress_calculation"/>
        <covered by="WpMigrate\Tests\Migration\MigrationWorkflowTest::test_metadata_accumulation"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_db_export_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_db_import_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_search_replace_success"/>
        <covered by="WpMigrate\Tests\Rest\ApiTest::test_command_finalize_success"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Migration</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABSPATH'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXIT">exit</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\State\StateStore</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Logging\JsonLogger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Migration\ErrorRecovery</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JobManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">StateStore</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$store</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ErrorRecovery</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorRecovery</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">	 * Valid state transitions for the migration workflow</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">VALID_TRANSITIONS</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_WHITESPACE">       </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'preflight_ok'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'preflight_ok'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'files_pass1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'files_pass1'</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_exported'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_exported'</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_uploaded'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_uploaded'</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_imported'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_imported'</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'url_replaced'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'url_replaced'</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'files_pass2'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'files_pass2'</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'finalized'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'finalized'</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'done'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE">         </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rollback'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Allow recovery from error</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rollback'</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rolled_back'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rolled_back'</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Allow restart after rollback</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'done'</token>
        <token name="T_WHITESPACE">          </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Terminal state</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">StateStore</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$store</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">ErrorRecovery</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorRecovery</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">store</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$store</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorRecovery</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorRecovery</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ErrorRecovery</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/** @return array&lt;string,mixed&gt; */</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_or_create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">store</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_job</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'steps'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'updated_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'progress'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">				</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'metadata'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">store</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">put_job</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">	 * Set job state with validation and enhanced tracking</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">	 *</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">	 * @throws \InvalidArgumentException When state transition is invalid</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">set_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$metadata</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_or_create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$currentState</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Validate state transition</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_valid_transition</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currentState</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">				</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Invalid state transition from '</token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$currentState</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">' to '</token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">'</token>
        <token name="T_DOUBLE_QUOTES">"</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Update job state</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'updated_at'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76"/>
      <line no="77">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Track state transition</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'steps'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'from_state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currentState</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'to_state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'timestamp'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'metadata'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$metadata</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84"/>
      <line no="85">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Update progress percentage</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'progress'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">calculate_progress</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87"/>
      <line no="88">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Merge metadata</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$metadata</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'metadata'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'metadata'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$metadata</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92"/>
      <line no="93">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">store</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">put_job</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Log state change</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonLogger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state_transition'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'info'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">State changed from </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$currentState</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> to </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'from'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$currentState</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'to'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'progress'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'progress'</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102"/>
      <line no="103">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="107">
        <token name="T_DOC_COMMENT">	 * Record an error in the job with automatic recovery consideration</token>
      </line>
      <line no="108">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">record_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_or_create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111"/>
      <line no="112">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$errorEntry</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'context'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'timestamp'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'c'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'unknown'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'is_recoverable'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorRecovery</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_recoverable_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119"/>
      <line no="120">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorEntry</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121"/>
      <line no="122">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">store</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">put_job</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123"/>
      <line no="124">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Log error with recovery information</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonLogger</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">log</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error_recorded'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorEntry</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'is_recoverable'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'warning'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Job error recorded: </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'context'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'is_recoverable'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorEntry</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'is_recoverable'</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="132"/>
      <line no="133">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="134">
        <token name="T_DOC_COMMENT">	 * Execute operation with automatic retry logic</token>
      </line>
      <line no="135">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">execute_with_retry</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$operation</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$operationName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorRecovery</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute_with_retry</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$operation</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$operationName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="139"/>
      <line no="140">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">	 * Check if job should be automatically retried</token>
      </line>
      <line no="142">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">should_retry_job</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_or_create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorRecovery</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">should_retry_job</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="147"/>
      <line no="148">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="149">
        <token name="T_DOC_COMMENT">	 * Schedule automatic retry for failed job</token>
      </line>
      <line no="150">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">schedule_automatic_retry</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_or_create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorRecovery</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">schedule_retry</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="155"/>
      <line no="156">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="157">
        <token name="T_DOC_COMMENT">	 * Get retry statistics for the job</token>
      </line>
      <line no="158">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_retry_stats</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorRecovery</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_retry_stats</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="162"/>
      <line no="163">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="164">
        <token name="T_DOC_COMMENT">	 * Get detailed job progress with validation</token>
      </line>
      <line no="165">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_progress</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_or_create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168"/>
      <line no="169">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'job_id'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'progress'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'progress'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'steps'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'steps'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created_at'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'updated_at'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'updated_at'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'metadata'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'metadata'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'is_valid'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_valid_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'can_rollback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">can_rollback_from_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'state'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="182"/>
      <line no="183">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="184">
        <token name="T_DOC_COMMENT">	 * Check if current state allows rollback</token>
      </line>
      <line no="185">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">can_rollback_from_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$rollbackStates</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_imported'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'url_replaced'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'files_pass2'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'finalized'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rollbackStates</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="190"/>
      <line no="191">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="192">
        <token name="T_DOC_COMMENT">	 * Validate if a state transition is allowed</token>
      </line>
      <line no="193">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_valid_transition</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$from</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$to</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$allowed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VALID_TRANSITIONS</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$from</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$to</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$allowed</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="198"/>
      <line no="199">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="200">
        <token name="T_DOC_COMMENT">	 * Check if a state is valid</token>
      </line>
      <line no="201">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_valid_state</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VALID_TRANSITIONS</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="205"/>
      <line no="206">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="207">
        <token name="T_DOC_COMMENT">	 * Calculate progress percentage based on state</token>
      </line>
      <line no="208">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">calculate_progress</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$progressMap</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'created'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'preflight_ok'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">10</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'files_pass1'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">25</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_exported'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">40</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_uploaded'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">55</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'db_imported'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">70</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'url_replaced'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">85</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'files_pass2'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">95</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'finalized'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">98</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'done'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">100</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rollback'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rolled_back'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="225"/>
      <line no="226">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$progressMap</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$state</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="228"/>
      <line no="229">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="230">
        <token name="T_DOC_COMMENT">	 * Clean up old jobs (older than specified days)</token>
      </line>
      <line no="231">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">cleanup_old_jobs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$daysOld</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">30</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">		</token>
        <token name="T_GLOBAL">global</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="234"/>
      <line no="235">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$cutoff</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gmdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Y-m-d H:i:s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtotime</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">-</token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$daysOld</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> days</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$optionPattern</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">OPTION_PREFIX</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'%'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="237"/>
      <line no="238">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$oldJobs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_results</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">prepare</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">			</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">SELECT option_name FROM </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="240">
        <token name="T_ENCAPSED_AND_WHITESPACE">			 WHERE option_name LIKE %s</token>
      </line>
      <line no="241">
        <token name="T_ENCAPSED_AND_WHITESPACE">			 AND option_value LIKE %s</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$optionPattern</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'%'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$wpdb</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">esc_like</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cutoff</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'%'</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="245"/>
      <line no="246">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$cleaned</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">		</token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$oldJobs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">OPTION_PREFIX</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$job</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">option_name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">store</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">delete_job</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jobId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$cleaned</token>
        <token name="T_INC">++</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="252"/>
      <line no="253">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cleaned</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="255">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="256"/>
      <line no="257"/>
      <line no="258"/>
    </source>
  </file>
</phpunit>
