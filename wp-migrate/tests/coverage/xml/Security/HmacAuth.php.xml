<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="HmacAuth.php" path="/Security">
    <totals>
      <lines total="154" comments="27" code="127" executable="61" executed="59" percent="96.72"/>
      <methods count="8" tested="6" percent="75.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="WpMigrate\Security\HmacAuth" start="9" executable="60" executed="58" crap="26">
      <namespace name="WpMigrate\Security"/>
      <method name="__construct" signature="__construct(callable $settingsProvider)" start="27" end="29" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="verify_request" signature="verify_request(WP_REST_Request $request)" start="34" end="90" crap="14" executable="35" executed="35" coverage="100"/>
      <method name="normalize_path" signature="normalize_path(WP_REST_Request $request): string" start="92" end="105" crap="2.02" executable="6" executed="5" coverage="83.333333333333"/>
      <method name="lowercase_headers" signature="lowercase_headers(array $headers): array" start="108" end="117" crap="2" executable="5" executed="5" coverage="100"/>
      <method name="extract_header_value" signature="extract_header_value(array $headers, string $key): string" start="119" end="125" crap="2.06" executable="4" executed="3" coverage="75"/>
      <method name="is_nonce_used" signature="is_nonce_used(string $nonce): bool" start="127" end="130" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="mark_nonce_used" signature="mark_nonce_used(string $nonce): void" start="132" end="135" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="is_secure_request" signature="is_secure_request(): bool" start="140" end="150" crap="3" executable="5" executed="5" coverage="100"/>
    </class>
    <coverage>
      <line nr="4">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
      </line>
      <line nr="28">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="35">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="36">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="37">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="39">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="40">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_shared_key"/>
      </line>
      <line nr="43">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="44">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
      </line>
      <line nr="47">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="48">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="49">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="50">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="51">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="53">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="54">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
      </line>
      <line nr="58">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="59">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="60">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="61">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
      </line>
      <line nr="65">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="66">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
      </line>
      <line nr="70">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="71">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="72">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="73">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="74">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
      </line>
      <line nr="78">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="79">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="80">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="81">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="82">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="83">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="84">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="85">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
      </line>
      <line nr="88">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="89">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="94">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="95">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="99">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="100">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="104">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="109">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="110">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="113">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="114">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="116">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="120">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="121">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="124">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="128">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="129">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="133">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="134">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="141">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="142">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_success"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_missing_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_timestamp_skew"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_future_timestamp"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_nonce_replay"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_invalid_signature"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_mismatch"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_peer_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_different_methods"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_path_normalization"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_empty_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_large_body"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_concurrent_different_nonces"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_malformed_headers"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_header_case_insensitivity"/>
      </line>
      <line nr="146">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
      </line>
      <line nr="147">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
      </line>
      <line nr="149">
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_tls_required"/>
        <covered by="WpMigrate\Tests\Security\HmacAuthTest::test_verify_request_proxy_ssl_detection"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">WpMigrate\Security</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">defined</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABSPATH'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXIT">exit</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\WP_Error</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\WP_REST_Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HmacAuth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT">	 * Header constants for HMAC authentication</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT">	 * Note: WordPress normalizes HTTP headers by replacing hyphens with underscores</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT">	 * So 'X-MIG-Timestamp' becomes 'x_mig_timestamp' in the headers array</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HDR_TS</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'x_mig_timestamp'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HDR_NONCE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'x_mig_nonce'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HDR_PEER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'x_mig_peer'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HDR_SIG</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'x_mig_signature'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MAX_SKEW_MS</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">5</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">60</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1000</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 5 minutes as per specification</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NONCE_TTL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3600</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// seconds</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">	 * @var callable():array{shared_key:string,peer_url:string}</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$settingsProvider</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$settingsProvider</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">settingsProvider</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$settingsProvider</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">	 * Verify HMAC headers per contract. Returns array of normalized headers on success, WP_Error on failure.</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">verify_request</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$settings</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY_CAST">(array)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\call_user_func</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">settingsProvider</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$settings</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'shared_key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$settings</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'shared_key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$expectedPeer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$settings</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'peer_url'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$settings</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'peer_url'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">			</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EAUTH'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Shared key is not configured'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_secure_request</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">			</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EUPGRADE_REQUIRED'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'TLS required'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">426</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lowercase_headers</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_headers</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$tsStr</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extract_header_value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HDR_TS</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extract_header_value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HDR_NONCE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$peer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extract_header_value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HDR_PEER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$sig</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extract_header_value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HDR_SIG</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsStr</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sig</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">			</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EAUTH'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Missing auth headers'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Time skew validation</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$nowMs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\round</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">microtime</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1000</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$ts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tsStr</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\abs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nowMs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MAX_SKEW_MS</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">			</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ETS_SKEW'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Timestamp skew too large'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="63"/>
      <line no="64">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Nonce replay check (1h window)</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_nonce_used</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">			</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ENONCE_REPLAY'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Nonce has already been used'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="68"/>
      <line no="69">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Peer URL check if configured</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$expectedPeer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$peer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$normExpected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$expectedPeer</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$normPeer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rtrim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$peer</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">			</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\strcasecmp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$normExpected</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$normPeer</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">				</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EAUTH'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Peer mismatch'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="77"/>
      <line no="78">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_body</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$bodyHash</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\hash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sha256'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_method</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">normalize_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"\n"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$bodyHash</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$calc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">base64_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\hash_hmac</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sha256'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payload</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\hash_equals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$calc</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sig</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">			</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_Error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'EAUTH'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid signature'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="87"/>
      <line no="88">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mark_nonce_used</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ts'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$ts</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nonce'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'peer'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$peer</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'path'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">normalize_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WP_REST_Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Use the REST route and prefix with /wp-json</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$route</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get_route</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// like /migrate/v1/handshake</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/wp-json'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$route</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Include query parameters in the path for HMAC signature calculation</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// This ensures the client and server calculate the same signature</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$query_string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SERVER</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'QUERY_STRING'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$query_string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'?'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$query_string</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106"/>
      <line no="107">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/** @param array&lt;string,mixed&gt; $headers */</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lowercase_headers</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">		</token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">			</token>
        <token name="T_COMMENT">// WordPress normalizes header names by replacing hyphens with underscores</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">			</token>
        <token name="T_COMMENT">// So 'X-MIG-Timestamp' becomes 'x_mig_timestamp' in the headers array</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$normalizedKey</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtolower</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$normalizedKey</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="118"/>
      <line no="119">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">extract_header_value</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$headers</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">			</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_nonce_used</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wp_migrate_nonce_'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">md5</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOL_CAST">(bool)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\get_transient</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="131"/>
      <line no="132">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mark_nonce_used</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wp_migrate_nonce_'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">md5</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nonce</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">		</token>
        <token name="T_NAME_FULLY_QUALIFIED">\set_transient</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">NONCE_TTL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="136"/>
      <line no="137">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="138">
        <token name="T_DOC_COMMENT">	 * Check if request is secure (HTTPS), including proxy scenarios.</token>
      </line>
      <line no="139">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_secure_request</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\is_ssl</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">			</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="144"/>
      <line no="145">
        <token name="T_WHITESPACE">		</token>
        <token name="T_COMMENT">// Check common proxy headers</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$proto</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SERVER</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'HTTP_X_FORWARDED_PROTO'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$https</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SERVER</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'HTTP_X_FORWARDED_SSL'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SERVER</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'HTTP_FRONT_END_HTTPS'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$proto</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'https'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$https</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'on'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="151">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="152"/>
      <line no="153"/>
      <line no="154"/>
    </source>
  </file>
</phpunit>
